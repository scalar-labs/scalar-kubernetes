envoy:
  replicaCount: 3

  prometheusRule:
    enabled: true

  serviceMonitor:
    enabled: true

  grafanaDashboard:
    enabled: true

  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "k8s_ingress"
      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

  tolerations:
    - effect: NoSchedule
      key: kubernetes.io/app
      operator: Equal
      value: scalardlpool

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: agentpool
                operator: In
                values:
                  - scalardlpool
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - scalardl
                - key: app.kubernetes.io/app
                  operator: In
                  values:
                    - envoy
            topologyKey: kubernetes.io/hostname
          weight: 50

  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 328Mi

auditor:
  replicaCount: 3

  imagePullSecrets:
    - name: reg-docker-secrets

  scalarAuditorConfiguration:
    dbContactPoints: cassandra-lb.internal.scalar-labs.com

    #
    # Cosmos DB
    #
    # dbContactPoints: <Cosmos DB account endpoint>
    # dbPassword: <Cosmos DB account primary master key>
    # dbStorage: cosmos

    #
    # DynamoDB
    #
    # dbStorage: dynamo
    # dbContactPoints: <REGION>
    # dbUsername: <AWS_ACCESS_KEY_ID>
    # dbPassword: <AWS_ACCESS_SECRET_KEY>

    # To use Auditor
    # auditorLedgerHost: <ledger hostname>

  prometheusRule:
    enabled: true

  grafanaDashboard:
    enabled: true

  nodeSelector: {}

  tolerations:
    - effect: NoSchedule
      key: kubernetes.io/app
      operator: Equal
      value: scalardlpool

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: agentpool
                operator: In
                values:
                  - scalardlpool
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - scalardl
                - key: app.kubernetes.io/app
                  operator: In
                  values:
                    - auditor
            topologyKey: kubernetes.io/hostname
          weight: 50

  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 1500m
      memory: 3Gi
