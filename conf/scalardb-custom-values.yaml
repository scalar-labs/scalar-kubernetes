envoy:
  replicaCount: 3
  
  serviceMonitor:
    enabled: false

  prometheusRule:
    enabled: false

  grafanaDashboard:
    enabled: false

  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "k8s_ingress"
      service.beta.kubernetes.io/aws-load-balancer-internal: "true"
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

  resources: {}
    
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: agentpool
                operator: In
                values:
                  - scalardbpool

scalardb:
  replicaCount: 3
  storageConfiguration:
  
    #
    # Cosmos DB
    #
    # contactPoints: <Cosmos DB account endpoint>
    # password: <Cosmos DB account primary master key>
    # storage: cosmos

    #
    # DynamoDB
    #
    # contactPoints: <REGION>
    # username: <AWS_ACCESS_KEY_ID>
    # password: <AWS_ACCESS_SECRET_KEY>
    # storage: dynamo
    
    dbLogLevel: INFO
    
  serviceMonitor:
    enabled: false

  prometheusRule:
    enabled: false

  grafanaDashboard:
    enabled: false
    
  resources: {}  

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: agentpool
                operator: In
                values:
                  - scalardbpool
  existingSecret: ""
