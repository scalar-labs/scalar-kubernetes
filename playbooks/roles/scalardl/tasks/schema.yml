---
- name: Check if a previous Schema Loading was installed
  k8s_info:
    api_version: batch/v1
    kind: Job
    label_selectors:
      - "app.kubernetes.io/name = schema-loading"
    namespace: "{{ kubernetes_namespace }}"
  register: job_schema_loading_previous_has_failed

- name: Delete helm Schema Loading if the previous job has failed
  command: >-
    {{ helm_binary_path }} delete load-schema
  when: job_schema_loading_previous_has_failed | json_query('resources[*].status.conditions[?type==`Failed`].status[]') | unique == ["True"]

- name: Deploy Schema Loading with helm
  kubernetes.core.helm:
    name: load-schema
    chart_ref: "{{ scalardl_charts_repo_name }}/schema-loading"
    chart_version: "{{ schema_loading_charts_version }}"
    release_namespace: "{{ kubernetes_namespace }}"
    update_repo_cache: yes
    create_namespace: yes
    wait_timeout: "200"
    values_files:
      - "{{ helm_charts_custom_config_path }}/schema-loading-custom-values.yaml"
  when: deploy_scalar_load_schma | bool

- name: Check Schema Loading job have been successful
  k8s_info:
    api_version: batch/v1
    kind: Job
    label_selectors:
      - "app.kubernetes.io/name = schema-loading"
    namespace: "{{ kubernetes_namespace }}"
  register: job_schema_loading_has_failed
  until: job_schema_loading_has_failed | json_query('resources[*].status.conditions[?type==`Complete`].status[]') | unique == ["True"]
  retries: 10
  delay: 5
